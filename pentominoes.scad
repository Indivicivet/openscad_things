W = 10;

module pentomino(idxs)
for (xy=idxs)
translate(xy * W)
square(W)
    ;

for (i_idxs=[
    [0, [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4]]],  // line
    [1, [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1]]],  // blob
    [2, [[0, 0], [0, 1], [0, 2], [0, 3], [1, 1]]],  // baton
    [3, [[0, 0], [0, 1], [0, 2], [1, 2], [2, 2]]],  // short L
    [4, [[0, 0], [0, 1], [0, 2], [0, 3], [1, 3]]],  // long L
    [5, [[1, 0], [0, 1], [1, 1], [1, 2], [2, 1]]],  // +
    [6, [[1, 0], [0, 1], [1, 1], [1, 2], [2, 2]]],  // wonky +
    [7, [[0, 0], [0, 1], [1, 1], [1, 2], [2, 2]]],  // W
    [8, [[0, 0], [1, 0], [1, 1], [1, 2], [2, 2]]],  // S
    [9, [[0, 0], [0, 1], [0, 2], [1, 1], [2, 1]]],  // T
    [10, [[0, 0], [0, 1], [0, 2], [1, 2], [1, 3]]],  // snake
    [11, [[0, 0], [0, 1], [0, 2], [1, 0], [1, 2]]],  // C
])
translate([W * i_idxs[0] * 4, 0])
pentomino(i_idxs[1])
    ;
